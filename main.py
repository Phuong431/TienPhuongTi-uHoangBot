from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import sqlite3
from datetime import datetime, timedelta
import schedule
import threading
import time

# Thay YOUR_BOT_TOKEN b·∫±ng token API c·ªßa b·∫°n
TOKEN = "8156843536:AAHSfCPba2XjcRdoFKEF378E2sp9WAMMY0Q"

# K·∫øt n·ªëi database
conn = sqlite3.connect("expenses.db", check_same_thread=False)
cursor = conn.cursor()

# T·∫°o b·∫£ng l∆∞u chi ti√™u
cursor.execute('''
CREATE TABLE IF NOT EXISTS expenses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    category TEXT,
    amount REAL,
    date TEXT
)
''')
conn.commit()

# L·ªánh /start: Ch√†o m·ª´ng ng∆∞·ªùi d√πng
def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "Xin ch√†o! T√¥i l√† bot qu·∫£n l√Ω chi ti√™u.\n"
        "B·∫°n c√≥ th·ªÉ nh·∫≠p chi ti√™u theo c√∫ ph√°p sau:\n"
        "‚Ä¢ `S·ªë ti·ªÅn Danh m·ª•c` (vd: `100k ƒÇn u·ªëng`)\n"
        "‚Ä¢ `Danh m·ª•c S·ªë ti·ªÅn` (vd: `ƒÇn u·ªëng 100k`)\n\n"
        "C√°c l·ªánh kh√°c:\n"
        "/help - H∆∞·ªõng d·∫´n chi ti·∫øt\n"
        "/report - B√°o c√°o t·ªïng chi th√°ng\n"
        "/view YYYY-MM-DD - B√°o c√°o chi ti√™u ng√†y\n"
        "/view YYYY-MM - B√°o c√°o chi ti√™u th√°ng\n"
        "/delete - X√≥a kho·∫£n chi (ID/ng√†y/th√°ng)"
    )

# L·ªánh /help: H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng chi ti·∫øt
def help_command(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üìå **H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot qu·∫£n l√Ω chi ti√™u:**\n"
        "1. **Nh·∫≠p kho·∫£n chi:**\n"
        "   ‚Ä¢ `S·ªë ti·ªÅn Danh m·ª•c` (vd: `100k ƒÇn u·ªëng`)\n"
        "   ‚Ä¢ `Danh m·ª•c S·ªë ti·ªÅn` (vd: `ƒÇn u·ªëng 100k`)\n\n"
        "2. **Xem b√°o c√°o:**\n"
        "   ‚Ä¢ `/report` - B√°o c√°o t·ªïng chi th√°ng hi·ªán t·∫°i\n"
        "   ‚Ä¢ `/view YYYY-MM-DD` - Xem kho·∫£n chi trong m·ªôt ng√†y c·ª• th·ªÉ\n"
        "   ‚Ä¢ `/view YYYY-MM` - Xem kho·∫£n chi trong m·ªôt th√°ng c·ª• th·ªÉ\n\n"
        "3. **X√≥a kho·∫£n chi:**\n"
        "   ‚Ä¢ `/delete ID` - X√≥a m·ªôt kho·∫£n chi theo ID\n"
        "   ‚Ä¢ `/delete YYYY-MM-DD` - X√≥a t·∫•t c·∫£ kho·∫£n chi trong ng√†y\n"
        "   ‚Ä¢ `/delete YYYY-MM` - X√≥a t·∫•t c·∫£ kho·∫£n chi trong th√°ng\n\n"
        "4. **T·ª± ƒë·ªông b√°o c√°o:**\n"
        "   ‚Ä¢ Bot s·∫Ω t·ª± ƒë·ªông g·ª≠i b√°o c√°o h√†ng ng√†y v√†o l√∫c 7h s√°ng.\n"
        "   ‚Ä¢ Bot s·∫Ω g·ª≠i b√°o c√°o t·ªïng chi th√°ng v√†o ng√†y cu·ªëi c√πng c·ªßa th√°ng, l√∫c 23h."
    )

# L∆∞u chi ti√™u v√† hi·ªÉn th·ªã t·ªïng chi th√°ng
def save_expense(update: Update, context: CallbackContext):
    user_id = update.message.chat_id
    text = update.message.text.strip()
    
    try:
        # T√°ch s·ªë ti·ªÅn v√† danh m·ª•c
        parts = text.split()
        if len(parts) < 2:
            raise ValueError
        
        # Ki·ªÉm tra s·ªë ti·ªÅn v√† danh m·ª•c
        if parts[0].replace('k', '').replace('K', '').isdigit():
            amount = parts[0]
            category = " ".join(parts[1:])
        elif parts[-1].replace('k', '').replace('K', '').isdigit():
            category = " ".join(parts[:-1])
            amount = parts[-1]
        else:
            raise ValueError
        
        # X·ª≠ l√Ω ƒë∆°n v·ªã K/k
        if amount.lower().endswith('k'):
            amount = float(amount[:-1]) * 1000
        else:
            amount = float(amount)
        
        # L∆∞u v√†o c∆° s·ªü d·ªØ li·ªáu
        cursor.execute("INSERT INTO expenses (user_id, category, amount, date) VALUES (?, ?, ?, DATE('now'))",
                       (user_id, category, amount))
        conn.commit()

        # T√≠nh t·ªïng chi c·ªßa th√°ng
        cursor.execute('''
        SELECT SUM(amount) FROM expenses
        WHERE user_id = ? AND strftime('%Y-%m', date) = strftime('%Y-%m', DATE('now'))
        ''', (user_id,))
        total_monthly = cursor.fetchone()[0] or 0

        # Ph·∫£n h·ªìi th√†nh c√¥ng
        update.message.reply_text(
            f"‚úÖ ƒê√£ ghi nh·∫≠n kho·∫£n chi: {int(amount):,} VND v√†o danh m·ª•c '{category}'.\n"
            f"üìä T·ªïng chi th√°ng hi·ªán t·∫°i: {int(total_monthly):,} VND."
        )
    except:
        # Ph·∫£n h·ªìi khi nh·∫≠p sai ƒë·ªãnh d·∫°ng
        update.message.reply_text(
            "‚ö†Ô∏è Sai ƒë·ªãnh d·∫°ng! Vui l√≤ng nh·∫≠p theo c√∫ ph√°p:\n"
            "`S·ªë ti·ªÅn Danh m·ª•c` ho·∫∑c `Danh m·ª•c S·ªë ti·ªÅn`\n"
            "V√≠ d·ª•:\n"
            "`100k ƒÇn u·ªëng`\n"
            "`ƒÇn u·ªëng 100k`",
            parse_mode="Markdown"
        )

# B√°o c√°o t·ªïng chi th√°ng hi·ªán t·∫°i
def report(update: Update, context: CallbackContext):
    user_id = update.message.chat_id

    cursor.execute('''
    SELECT category, amount, date FROM expenses
    WHERE user_id = ? AND strftime('%Y-%m', date) = strftime('%Y-%m', DATE('now'))
    ''', (user_id,))
    data = cursor.fetchall()
    
    if not data:
        update.message.reply_text("üìä B·∫°n ch∆∞a c√≥ kho·∫£n chi ti√™u n√†o trong th√°ng n√†y.")
        return
    
    report_text = "**üìä B√°o c√°o chi ti√™u th√°ng n√†y:**\n"
    total_spent = 0

    for row in data:
        category, amount, date = row
        report_text += f"‚Ä¢ {category} ({date}): {int(amount):,} VND\n"
        total_spent += amount
    
    report_text += f"\n**T·ªïng chi th√°ng n√†y:** {int(total_spent):,} VND"
    update.message.reply_text(report_text, parse_mode="Markdown")
